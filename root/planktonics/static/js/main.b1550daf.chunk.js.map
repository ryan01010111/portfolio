{"version":3,"sources":["components/contexts/MessageReducer.tsx","components/contexts/MessageContext.tsx","components/contexts/demoMessages.tsx","components/ProtectedRoute.tsx","components/Login.tsx","components/Register.tsx","components/Header.tsx","components/MainMenu.tsx","components/MessageOptions.tsx","components/Message.tsx","components/EditMessageModal.tsx","components/ChatWindow.tsx","components/ChatBox.tsx","components/Chat.tsx","App.tsx","serviceWorker.ts","theme.tsx","index.tsx"],"names":["state","action","channel","type","payload","filter","msg","id","message","initialState","work","user","time","Date","casual","MessageContext","createContext","MessageProvider","children","useState","currentChannel","setCurrentChannel","useReducer","MessageReducer","dispatch","Provider","value","getMessages","addMessage","deleteMessage","updateMessage","ProtectedRoute","Component","component","rest","render","props","localStorage","getItem","to","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","registerGrid","textAlign","submit","Login","history","useHistory","email","setEmail","password","setPassword","authError","setAuthError","classes","Grid","container","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","gutterBottom","color","noValidate","onSubmit","e","preventDefault","storedEmail","storedPassword","setItem","Math","random","toString","slice","push","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","Button","Link","RouterLink","Register","username","setUsername","createStyles","zIndex","grow","flexGrow","logo","marginRight","padding","border","borderRadius","fontWeight","menuButton","title","sectionDesktop","Header","toggleMenu","context","useContext","AppBar","position","Toolbar","Hidden","smUp","implementation","IconButton","edge","aria-label","onClick","smDown","noWrap","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","ResponsiveDrawer","window","mobileOpen","logout","useTheme","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","undefined","document","body","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","bottom","right","opacity","transition","MessageOptions","openEditModal","msgTop","justifyContent","fontSize","dark","Message","toLocaleTimeString","top","left","transform","overflow","background","boxShadow","shadows","fontFamily","EditMessageModal","setClose","editText","setEditText","Modal","TextareaAutosize","rowsMin","chatWindow","overflowY","ChatWindow","messages","editModalOpen","setEditModalOpen","messageToEdit","setMessageToEdit","windowBottomRef","useRef","useEffect","current","scrollIntoView","behavior","handleEditMessage","map","key","ref","chatBox","emojiBtn","sendBtn","ChatBox","messageText","setMessageText","openEmojiPicker","setOpenEmojiPicker","chosenEmoji","setChosenEmoji","newMessage","uuidv4","sendMessage","placeholder","disableSearchBar","onEmojiClick","event","emojiObject","emoji","Chat","mobileMenuOpen","setMobileMenuOpen","MainMenu","App","path","Boolean","location","hostname","match","createMuiTheme","light","contrastText","default","ReactDOM","ThemeProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b1550daf.chunk.js","sourcesContent":["interface Message {\r\n  id: string;\r\n  user: string;\r\n  message: string;\r\n  time: Date;\r\n}\r\n\r\ninterface State {\r\n  work: Message[];\r\n  casual: Message[];\r\n}\r\n\r\ninterface Action {\r\n  channel: string;\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport default (state: State, action: Action) => {\r\n  const channel = action.channel;\r\n  switch (action.type) {\r\n    case \"ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        [channel]: [...state[channel], action.payload],\r\n      };\r\n    case \"DELETE_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        [channel]: state[channel].filter(\r\n          (msg: Message) => msg.id !== action.payload\r\n        ),\r\n      };\r\n    case \"UPDATE_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        [channel]: state[channel].filter((msg: Message) => {\r\n          if (msg.id === action.payload.id) {\r\n            msg.message = action.payload.message;\r\n          }\r\n          return msg;\r\n        }),\r\n      };\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useState } from \"react\";\r\nimport MessageReducer from \"./MessageReducer\";\r\nimport { workMessages, casualMessages } from \"./demoMessages\";\r\n\r\nconst initialState: object = {\r\n  work: workMessages,\r\n  casual: casualMessages,\r\n};\r\n\r\ninterface Message {\r\n  id: string;\r\n  user: string;\r\n  message: string;\r\n  time: Date;\r\n}\r\n\r\nexport const MessageContext = createContext();\r\n\r\nexport const MessageProvider = ({ children }) => {\r\n  const [currentChannel, setCurrentChannel] = useState<string>(\"work\");\r\n  const [state, dispatch] = useReducer(MessageReducer, initialState);\r\n\r\n  // actions\r\n  const getMessages = () => state[currentChannel];\r\n\r\n  const addMessage = (msg: Message) => {\r\n    dispatch({ channel: currentChannel, type: \"ADD_MESSAGE\", payload: msg });\r\n  };\r\n\r\n  const deleteMessage = (id: string) => {\r\n    dispatch({ channel: currentChannel, type: \"DELETE_MESSAGE\", payload: id });\r\n  };\r\n\r\n  const updateMessage = (msg: Message) => {\r\n    const { id, message } = msg;\r\n    dispatch({\r\n      channel: currentChannel,\r\n      type: \"UPDATE_MESSAGE\",\r\n      payload: {\r\n        id,\r\n        message,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MessageContext.Provider\r\n      value={{\r\n        currentChannel,\r\n        setCurrentChannel,\r\n        getMessages,\r\n        addMessage,\r\n        deleteMessage,\r\n        updateMessage,\r\n      }}\r\n    >\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n","export const workMessages = [\r\n  {\r\n    id: 1,\r\n    user: \"Aleksey Engineer\",\r\n    message:\r\n      \"Сергей Викторович, отправьте, пожалуйста, копию договора #236Н. Заранее благодарю.\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 2,\r\n    user: \"Сергей Викторович\",\r\n    message:\r\n      \"Алексей, отправил. Сегодня у нас поступила новая заявка от маленькой компании из области. Кто сможет принять?\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 3,\r\n    user: \"Gvidon Vyshnevskiy\",\r\n    message:\r\n      \"Регина и Олег сейчас в отпуске. У меня сейчас тоже 4 проекта в работе. Алексей, сможешь взять?\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 4,\r\n    user: \"Aleksey Engineer\",\r\n    message: \"Нет, Жень, не могу. Я с 15-ого в отпуске на 2 недели.\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 5,\r\n    user: \"Gvidon Vyshnevskiy\",\r\n    message: \"Понятно. Ты не знаешь, когда Олег выходит?\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 6,\r\n    user: \"Aleksey Engineer\",\r\n    message: \"С 18-ого. Позвони в отдел кадров.\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 7,\r\n    user: \"Gvidon Vyshnevskiy\",\r\n    message: \"Ок 👍\",\r\n    time: new Date(),\r\n  },\r\n];\r\n\r\nexport const casualMessages = [\r\n  {\r\n    id: 8,\r\n    user: \"Engineer\",\r\n    message:\r\n      \"Нет, знаете, ну всё, с меня приключений уже достаточно, это точно, я уже на улицу не пойду. Я, знаете, как туда, на улицу, когда иду, у меня постоянно всё происходит.\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 9,\r\n    user: \"Gvidon Vyshnevskiy\",\r\n    message:\r\n      \"Здесь-то я и живу. Вот она, моя хибарочка — небольшая, уютная. Маленькая, я бы даже сказал. Но дела здесь происходят не маленькие, очень большие дела!\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    id: 10,\r\n    user: \"Reporter\",\r\n    message:\r\n      \"Так получается, что вы единственный представитель грибного сообщества, что согласились со мной общаться. Откуда такая смелость?\",\r\n    time: new Date(),\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!localStorage.getItem(\"token\")) {\r\n          return <Redirect to=\"/login\" />;\r\n        } else {\r\n          return <Component {...props} {...rest} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\n// mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://www.amnh.org/var/ezflow_site/storage/images/media/amnh/images/explore/ology-images/marine-biology/find-my-baby-plankton-picture/minden_80006377_2x/3070649-1-eng-US/minden_80006377_2x.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  registerGrid: {\r\n    textAlign: \"center\",\r\n    \"& > *\": {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [authError, setAuthError] = useState<boolean>(false);\r\n\r\n  const authenticate = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const storedEmail = localStorage.getItem(\"email\");\r\n    const storedPassword = localStorage.getItem(\"password\");\r\n    if (email === storedEmail && password === storedPassword) {\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setAuthError(false);\r\n      localStorage.setItem(\"token\", Math.random().toString().slice(2));\r\n      history.push(\"/\");\r\n    } else {\r\n      setAuthError(true);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n            Войдите:\r\n          </Typography>\r\n          {authError && (\r\n            <Typography component=\"p\" variant=\"body2\" color=\"error\">\r\n              Неверные логин или пароль\r\n            </Typography>\r\n          )}\r\n          <form className={classes.form} noValidate onSubmit={authenticate}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Почта\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setEmail(e.target.value)\r\n              }\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setPassword(e.target.value)\r\n              }\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <Grid container className={classes.registerGrid}>\r\n              <Grid item xs={12}>\r\n                Нет аккаунта?\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Link to=\"/register\" variant=\"body2\" component={RouterLink}>\r\n                  Зарегистрироваться\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\n// mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://www.amnh.org/var/ezflow_site/storage/images/media/amnh/images/explore/ology-images/marine-biology/find-my-baby-plankton-picture/minden_80006377_2x/3070649-1-eng-US/minden_80006377_2x.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  registerGrid: {\r\n    textAlign: \"center\",\r\n    \"& > *\": {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const createUser = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (email && username && password) {\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n      // generate \"token\"\r\n      localStorage.setItem(\"token\", Math.random().toString().slice(2));\r\n      setEmail(\"\");\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AccountCircleIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Регистрация\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={createUser}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Почта\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setEmail(e.target.value)\r\n              }\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Имя пользователя\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setUsername(e.target.value)\r\n              }\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setPassword(e.target.value)\r\n              }\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n            <Grid container className={classes.registerGrid}>\r\n              <Grid item xs={12}>\r\n                Есть аккаунт?\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Link to=\"/login\" variant=\"body2\" component={RouterLink}>\r\n                  Войти\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext } from \"react\";\r\n\r\n// mui\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\n// components\r\nimport { MessageContext } from \"./contexts/MessageContext\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      zIndex: 9999,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    logo: {\r\n      display: \"block\",\r\n      marginRight: 40,\r\n      padding: 8,\r\n      border: \"2px solid #000\",\r\n      borderRadius: 4,\r\n      fontWeight: \"bold\",\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: \"block\",\r\n    },\r\n    sectionDesktop: {\r\n      display: \"flex\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  toggleMenu: () => any;\r\n}\r\n\r\nconst Header = ({ toggleMenu }: Props) => {\r\n  const context = useContext(MessageContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Hidden smUp implementation=\"css\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open menu\"\r\n              onClick={toggleMenu}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Typography className={classes.logo} variant=\"h5\" noWrap>\r\n              Planktonics\r\n            </Typography>\r\n          </Hidden>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {\"#\" + (context.currentChannel === \"work\" ? \"Работа\" : \"Общение\")}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton color=\"inherit\">\r\n              <MailIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n              <NotificationsIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\n\r\n// mui\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport BusinessSharpIcon from \"@material-ui/icons/BusinessSharp\";\r\nimport FreeBreakfastIcon from \"@material-ui/icons/FreeBreakfast\";\r\n\r\n// components\r\nimport { MessageContext } from \"./contexts/MessageContext\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: 240,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: 240,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  window?: () => Window;\r\n  mobileOpen: boolean;\r\n  toggleMenu: () => any;\r\n  logout: () => any;\r\n}\r\n\r\nconst ResponsiveDrawer = ({\r\n  window,\r\n  mobileOpen,\r\n  toggleMenu,\r\n  logout,\r\n}: Props) => {\r\n  const context = useContext(MessageContext);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {/* item 1 */}\r\n        <ListItem button onClick={logout}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Выход\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {/* item 2 */}\r\n        <ListItem button onClick={() => context.setCurrentChannel(\"work\")}>\r\n          <ListItemIcon>\r\n            <BusinessSharpIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Работа\" />\r\n        </ListItem>\r\n        {/* item 3 */}\r\n        <ListItem button onClick={() => context.setCurrentChannel(\"casual\")}>\r\n          <ListItemIcon>\r\n            <FreeBreakfastIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Общение\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={toggleMenu}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useContext } from \"react\";\r\n\r\n// mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n// components\r\nimport { MessageContext } from \"./contexts/MessageContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 10,\r\n    opacity: 0,\r\n    transition: \"0.4s opacity ease\",\r\n  },\r\n});\r\n\r\ninterface MessageInterface {\r\n  id: string;\r\n  user: string;\r\n  message: string;\r\n  time: Date;\r\n}\r\n\r\ninterface Props {\r\n  message: MessageInterface;\r\n  openEditModal: (msg: MessageInterface) => void;\r\n}\r\n\r\nconst MessageOptions = ({ message, openEditModal }: Props) => {\r\n  const context = useContext(MessageContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root + \" message-options\"}>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={() => context.deleteMessage(message.id)}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <IconButton aria-label=\"edit\" onClick={() => openEditModal(message)}>\r\n        <EditIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageOptions;\r\n","import React from \"react\";\r\n\r\n// mui\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// components\r\nimport MessageOptions from \"./MessageOptions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    msgTop: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      color: theme.palette.secondary.main,\r\n      fontSize: \"0.8em\",\r\n    },\r\n    paper: {\r\n      position: \"relative\",\r\n      margin: \"12px 0\",\r\n      padding: \"12px 24px\",\r\n      backgroundColor: theme.palette.primary.dark,\r\n      \"&:hover > .message-options\": {\r\n        opacity: 1,\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ninterface MessageInterface {\r\n  id: string;\r\n  user: string;\r\n  message: string;\r\n  time: Date;\r\n}\r\n\r\ninterface Props {\r\n  message: MessageInterface;\r\n  openEditModal: (msg: MessageInterface) => void;\r\n}\r\n\r\nconst Message = ({ message, openEditModal }: Props) => {\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper} square>\r\n      <div className={classes.msgTop}>\r\n        <span>{message.user}</span>\r\n        <span>{message.time.toLocaleTimeString()}</span>\r\n      </div>\r\n      <p>{message.message}</p>\r\n      {message.user === username && (\r\n        <MessageOptions message={message} openEditModal={openEditModal} />\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\n// mui\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Modal } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      marginTop: 24,\r\n    },\r\n    paper: {\r\n      width: \"70%\",\r\n      height: \"40%\",\r\n      position: \"absolute\",\r\n      top: \"30%\",\r\n      left: \"50%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      transform: \"translateX(-50%)\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      \"& textarea\": {\r\n        fontFamily: \"Roboto\",\r\n        fontSize: \"1.2em\",\r\n        padding: 4,\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  setClose: () => any;\r\n  editText: string;\r\n  setEditText: (value: string) => any;\r\n  submit: () => void;\r\n}\r\n\r\nconst EditMessageModal = ({\r\n  open,\r\n  setClose,\r\n  editText,\r\n  setEditText,\r\n  submit,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = () => {\r\n    submit();\r\n    setClose();\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={setClose}>\r\n      <div className={classes.paper}>\r\n        <h2>Редактировать</h2>\r\n        <TextareaAutosize\r\n          rowsMin={5}\r\n          value={editText}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n            setEditText(e.target.value)\r\n          }\r\n        />\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          редактировать\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditMessageModal;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\n\r\n// mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// components\r\nimport { MessageContext } from \"./contexts/MessageContext\";\r\nimport Message from \"./Message\";\r\nimport EditMessageModal from \"./EditMessageModal\";\r\n\r\nconst useStyles = makeStyles({\r\n  chatWindow: {\r\n    height: \"100%\",\r\n    padding: 12,\r\n    overflowY: \"scroll\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 12,\r\n      backgroundColor: \"none\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"#333\",\r\n      borderRadius: 8,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"#999\",\r\n      borderRadius: 8,\r\n    },\r\n    \"&::-webkit-scrollbar-corner\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\ninterface MessageInterface {\r\n  id: string;\r\n  user: string;\r\n  message: string;\r\n  time: Date;\r\n}\r\n\r\nconst ChatWindow = () => {\r\n  const context = useContext(MessageContext);\r\n  const messages = context.getMessages();\r\n  const [editModalOpen, setEditModalOpen] = useState<boolean>(false);\r\n  const [editText, setEditText] = useState<string>(\"\");\r\n  const [messageToEdit, setMessageToEdit] = useState<MessageInterface | null>(\r\n    null\r\n  );\r\n  const windowBottomRef:\r\n    | string\r\n    | ((instance: HTMLDivElement | null) => void)\r\n    | React.RefObject<HTMLDivElement>\r\n    | null\r\n    | undefined = useRef(null);\r\n\r\n  useEffect(() => {\r\n    windowBottomRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleEditMessage = (msg: MessageInterface) => {\r\n    setMessageToEdit(msg);\r\n    setEditText(msg.message);\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  const submitMessageEdit = () => {\r\n    const msg = messageToEdit;\r\n    msg.message = editText;\r\n    context.updateMessage(msg);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div id=\"chat-window\" className={classes.chatWindow}>\r\n      {messages.map((msg: MessageInterface) => (\r\n        <Message key={msg.id} message={msg} openEditModal={handleEditMessage} />\r\n      ))}\r\n      <div ref={windowBottomRef}></div>\r\n      <EditMessageModal\r\n        open={editModalOpen}\r\n        setClose={() => setEditModalOpen(false)}\r\n        editText={editText}\r\n        setEditText={setEditText}\r\n        submit={submitMessageEdit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\n\r\n// components\r\nimport { MessageContext } from \"./contexts/MessageContext\";\r\nimport Picker from \"emoji-picker-react\";\r\n\r\nconst useStyles = makeStyles({\r\n  chatBox: {\r\n    height: 80,\r\n    padding: 12,\r\n    backgroundColor: \"#555\",\r\n  },\r\n  emojiBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"50%\",\r\n    right: 54,\r\n    transform: \"translateY(50%)\",\r\n  },\r\n  form: {\r\n    position: \"relative\",\r\n    \"&, .MuiFormControl-root, .MuiInputBase-root \": {\r\n      height: \"100%\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      height: \"100%\",\r\n      fontSize: \"1.2em\",\r\n      margin: \"0 100px 0 24px\",\r\n    },\r\n  },\r\n  sendBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"50%\",\r\n    right: 0,\r\n    transform: \"translateY(50%)\",\r\n  },\r\n});\r\n\r\ninterface Message {\r\n  id: string;\r\n  user: string;\r\n  message: string;\r\n  time: Date;\r\n}\r\n\r\nconst ChatBox = () => {\r\n  const context = useContext(MessageContext);\r\n  const username = localStorage.getItem(\"username\") || \"\";\r\n  const [messageText, setMessageText] = useState<string>(\"\");\r\n  const [openEmojiPicker, setOpenEmojiPicker] = useState<boolean>(false);\r\n  const [chosenEmoji, setChosenEmoji] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (chosenEmoji) {\r\n      setMessageText(messageText + chosenEmoji);\r\n      setChosenEmoji(null);\r\n    }\r\n  }, [chosenEmoji, messageText]);\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject.emoji);\r\n  };\r\n\r\n  const sendMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (messageText) {\r\n      const newMessage: Message = {\r\n        id: uuidv4(),\r\n        user: username,\r\n        message: messageText,\r\n        time: new Date(),\r\n      };\r\n      context.addMessage(newMessage);\r\n      setMessageText(\"\");\r\n      setOpenEmojiPicker(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.chatBox}>\r\n      <form\r\n        className={classes.form}\r\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => sendMessage(e)}\r\n      >\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"печатать...\"\r\n          value={messageText}\r\n          onChange={(e: React.FormEvent<HTMLFormElement>) =>\r\n            setMessageText(e.target.value)\r\n          }\r\n        />\r\n        <IconButton className={classes.sendBtn} type=\"submit\">\r\n          <SendIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={classes.emojiBtn}\r\n          type=\"button\"\r\n          onClick={() => setOpenEmojiPicker(!openEmojiPicker)}\r\n        >\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n        {openEmojiPicker && (\r\n          <Picker disableSearchBar onEmojiClick={onEmojiClick} />\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// components\r\nimport Header from \"./Header\";\r\nimport MainMenu from \"./MainMenu\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport ChatBox from \"./ChatBox\";\r\n\r\nconst Chat = () => {\r\n  const history = useHistory();\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState<boolean>(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.setItem(\"token\", \"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"chat-container\">\r\n      <Header toggleMenu={toggleMenu} />\r\n      <div id=\"main-window\">\r\n        <MainMenu\r\n          mobileOpen={mobileMenuOpen}\r\n          toggleMenu={toggleMenu}\r\n          logout={logout}\r\n        />\r\n        <div id=\"window-right\">\r\n          <ChatWindow />\r\n          <ChatBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// components\nimport { MessageProvider } from \"./components/contexts/MessageContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Chat from \"./components/Chat\";\n\nfunction App() {\n  return (\n    <Router>\n      <MessageProvider>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <ProtectedRoute path=\"/\" component={Chat} />\n        </Switch>\n      </MessageProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      light: \"#9adcfb\",\r\n      main: \"#81d4fa\",\r\n      dark: \"#5a94af\",\r\n      contrastText: \"#000\",\r\n    },\r\n    secondary: {\r\n      light: \"#87f3be\",\r\n      main: \"#69f0ae\",\r\n      dark: \"#49a879\",\r\n      contrastText: \"#000\",\r\n    },\r\n    background: {\r\n      default: \"#444\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}